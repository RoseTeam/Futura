<?xml version="1.0"?>
<!--
    
    Robot navigation configuration :

    Choose a configuration : conf_a (default) or conf_b
    See docs/rtabmap-example.md for details
     
    Following topic are published :
    Both configurations (A and B)
    
     - /camera/rgb/image          (from Kinect)
     - /camera/rgb/camera_info    (from Kinect)     
     - /camera/depth/image        (from Kinect)
     - /camera/laserscan          (from Kinect -> depthimage_to_laserscan)
    
    
    Only in Configuration B :



-->
<launch>

    <!-- Choose configuration: -->
    <arg name="conf_a" default="true"/>
    <arg name="conf_b" default="false"/>

    <!-- Choose valid topic names from Kinect:  -->
    <arg name="rgb_image" default="/camera/rgb/image_rect_color"/>
    <arg name="rgb_camera_info" default="/camera/rgb/camera_info"/>
    <arg name="depth_image" default="/camera/depth_registered/image_raw"/>
    <arg name="depth_camera_info" default="/camera/depth_registered/camera_info"/>
    <arg name="base_kinect_link" default="camera_link" /> <!-- tf coordinate system name from Kinect -->
    <arg name="d2l_output_laserscan" default="/camera/laserscan"/>
    
    <!-- 
        * depthimage_to_laserscan output frame id = The frame id of the laser scan. For point clouds coming from an "optical" frame with Z forward, this value should be set to the corresponding frame with X forward and Z up. 
         
        * laser scan height = The number of pixels rows to use to generate the laserscan. For each column, the scan will return the minimum value for those pixels centered vertically in the image.    
    -->
    <arg name="d2l_output_frame_id" value="$(arg base_kinect_link)"/>
    <arg name="d2l_scan_height" value="1"/>    

    <!-- ********************************************************************* -->
    <!--   Setup sensors : image from Kinect, depth from Kinect, laserscan     -->
    <!-- ********************************************************************* -->

    <!-- START Kinect -->
    <include file="$(find freenect_launch)/launch/freenect.launch">
        <!-- https://github.com/ros-drivers/freenect_stack/blob/master/freenect_launch/launch/freenect.launch -->

        <arg name="depth_registration" value="true" />

        <arg name="data_skip" value="1" />

        <arg name="num_worker_threads" value="4" /> 

        <arg name="publish_tf" value="true" />
        
        <!-- Calibration files -->
        <!--arg name="rgb_camera_info_url"   value="" /-->
        <!--arg name="depth_camera_info_url" value="" /-->

        <!-- Processing Modules -->
        <arg name="rgb_processing"                  value="true"/>
        <arg name="ir_processing"                   value="true"/>
        <arg name="depth_processing"                value="true"/>
        <arg name="depth_registered_processing"     value="true"/>
        <arg name="disparity_processing"            value="false"/>
        <arg name="disparity_registered_processing" value="false"/>
        <arg name="hw_registered_processing"        value="false" />
        <arg name="sw_registered_processing"        value="false" />

    </include>

    <!-- 
        Kinect Topics published :
            /camera/debayer/parameter_descriptions
            /camera/debayer/parameter_updates
            /camera/depth/camera_info
            /camera/depth/image
            /camera/depth/image_raw
            /camera/depth/image_rect
            /camera/depth/image_rect_raw
            /camera/depth/points
            /camera/depth_rectify_depth/parameter_descriptions
            /camera/depth_rectify_depth/parameter_updates
            /camera/depth_registered/camera_info
            /camera/depth_registered/image_raw
            /camera/driver/parameter_descriptions
            /camera/driver/parameter_updates
            /camera/ir/camera_info
            /camera/ir/image_raw
            /camera/ir/image_rect_ir
            /camera/projector/camera_info
            /camera/rectify_color/parameter_descriptions
            /camera/rectify_color/parameter_updates
            /camera/rectify_ir/parameter_descriptions
            /camera/rectify_ir/parameter_updates
            /camera/rectify_mono/parameter_descriptions
            /camera/rectify_mono/parameter_updates
            /camera/rgb/camera_info
            /camera/rgb/image_color
            /camera/rgb/image_mono
            /camera/rgb/image_raw
            /camera/rgb/image_rect_color
            /camera/rgb/image_rect_mono

            /tf
                /camera_link
                /camera_rgb_optical_frame
                /camera_depth_optical_frame             
                /camera_rgb_frame
                /camera_depth_frame
    -->
              
    <!--RGBD to LaserScan-->
    <node pkg="depthimage_to_laserscan"
          name="depthimage_to_laserscan"
          type="depthimage_to_laserscan"
          output="screen">
        <remap from="image" to="$(arg depth_image)" />
        <remap from="camera_info" to="$(arg depth_camera_info)" />
        <remap from="scan" to="$(arg d2l_output_laserscan)" />

        <param name="scan_height" value="$(arg d2l_scan_height)"/>
        <param name="output_frame_id" value="$(arg d2l_output_frame_id)"/>
        <param name="_image_transport" value="compressed"/>
    </node>

    <!-- ********************************************************************* -->
    <!--  Setup visual odometry : from Kinect (conf_a), from PiCamera (conf_b) -->
    <!-- ********************************************************************* -->
    <!-- see http://wiki.ros.org/rtabmap_ros#rgbd_odometry  -->

    <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <remap from="rgb/image"       to="$(arg rgb_image)"/>
      <remap from="rgb/camera_info" to="$(arg rgb_camera_info)"/>
      <remap from="depth/image"     to="$(arg depth_image)"/>

      <param name="frame_id" type="string" value="base_link"/>
    </node>


    <!-- ********************************************************************* -->
    <!--                    Setup robot transformations                        -->
    <!-- ********************************************************************* -->
    <include file="$(find futurakart_2dnav)/launch/includes/robot_setup_tf.launch">
        <arg name="base_kinect_link" value="$(arg base_kinect_link)" />
    </include>

</launch>
