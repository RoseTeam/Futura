<?xml version="1.0"?>
<!--
    Launch file to start RTabMapviz application to visualize the mapping or localization
    
    The parameters should be the same as in the create_map.launch
-->
<launch>
   
    <!-- Choose valid topic names from Kinect:  -->
    <arg name="camera_name" value="camera"/> <!-- Kinect camera namespace name for output topics -->
    <arg name="rgb_image" value="/$(arg camera_name)/rgb/image_rect_color"/> <!-- RGB image topic -->
    <arg name="rgb_camera_info" value="/$(arg camera_name)/rgb/camera_info"/> <!-- RGB Camera info topic -->
    <arg name="depth_image" value="/$(arg camera_name)/depth_registered/image_raw"/> <!-- Depth image topic -->
    <arg name="depth_camera_info" value="/$(arg camera_name)/depth_registered/camera_info"/> <!-- Depth Camera info topic -->
    <arg name="base_kinect_link" value="$(arg camera_name)_link" /> <!-- tf coordinate system name from Kinect -->
    <arg name="laserscan_topic" value="/$(arg camera_name)/laserscan"/> <!-- Laserscan topic name for depth_to_laserscan output -->
    <arg name="rtm_output_vis_odom" value="/visual_odom"/> <!-- Odometry topic name for RTabmap rgbd visual odometry output  -->
    

    <!-- Visualisation RTAB-Map -->
    <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find futurakart_2dnav)/launch/includes/rgbd_gui.ini" output="screen">
  	  <param name="subscribe_depth"    type="bool" value="true"/>
      <param name="subscribe_scan"     type="bool" value="true"/>
      <param name="frame_id"           type="string" value="base_link"/>
      <param name="wait_for_transform" type="bool" value="true"/>
    
      <remap from="rgb/image"       to="$(arg rgb_image)"/>
      <remap from="depth/image"     to="$(arg depth_image)"/>
      <remap from="rgb/camera_info" to="$(arg rgb_camera_info)"/>
      <remap from="scan"            to="$(arg laserscan_topic)"/>
      <!--<remap from="odom"            to="$(arg rtm_output_vis_odom)"/>-->
      <remap from="odom"            to="/odom"/>

      <param name="rgb/image_transport"   type="string" value="compressed"/>
      <param name="depth/image_transport" type="string" value="compressedDepth"/>
    </node>
   

</launch>
